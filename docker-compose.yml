services:
  catalogservice:
    build:
      context: /home/Jesoren/poc/CatalogService/CatalogServiceAPI
      dockerfile: Dockerfile
    ports:
      - "5139:8080" # CatalogService is exposed on host port 5140
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VaultEndPoint: http://vault_dev:8201
      RabbitMQ__HostName: rabbitmq
    networks:
      - app-network
    depends_on:
      - userservice
      - rabbitmq

  catalogservice1:
    build:
      context: /home/Jesoren/poc/CatalogService/CatalogServiceAPI
      dockerfile: Dockerfile
    ports:
      - "5140:8080" # CatalogService is exposed on host port 5140
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VaultEndPoint: http://vault_dev:8201
      RabbitMQ__HostName: rabbitmq
    networks:
      - app-network
    depends_on:
      - userservice
      - rabbitmq

  catalogservice2:
    build:
      context: /home/Jesoren/poc/CatalogService/CatalogServiceAPI
      dockerfile: Dockerfile
    ports:
      - "5141:8080" # CatalogService is exposed on host port 5140
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VaultEndPoint: http://vault_dev:8201
      RabbitMQ__HostName: rabbitmq
    networks:
      - app-network
    depends_on:
      - userservice
      - rabbitmq

  userservice:
    build:
      context: /home/Jesoren/poc/UserService/UserServiceAPI
      dockerfile: Dockerfile
    ports:
      - "5410:8080" # UserService is exposed on host port 5410
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VaultEndPoint: http://vault_dev:8201
      MongoDbSettings__DatabaseName: Auktionshuset
      MongoDbSettings__UsersCollection: UsersCollection
    networks:
      - app-network

  userservice1:
    build:
      context: /home/Jesoren/poc/UserService/UserServiceAPI
      dockerfile: Dockerfile
    ports:
      - "5411:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VaultEndPoint: http://vault_dev:8201
    networks:
      - app-network

  authservice:
    build:
      context: /home/Jesoren/poc/AuthService/AuthServiceAPI
      dockerfile: Dockerfile
    ports:
      - "5200:8080" # UserService is exposed on host port 5200
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VaultEndPoint: http://vault_dev:8201
      Secret: AuthService
      Issuer: 2aVpT8wE1O8hCxFy8X7q7N3/1Aw3NH0XrPlF1v8y2+k=
      UserServiceEndPoint: http://userservice:8080/user/GetByUsername/
    networks:
      - app-network
    depends_on:
      - userservice

  authservice1:
    build:
      context: /home/Jesoren/poc/AuthService/AuthServiceAPI
      dockerfile: Dockerfile
    ports:
      - "5201:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      VAULT_TOKEN: 00000000-0000-0000-0000-000000000000
      VaultEndPoint: http://vault_dev:8201
      UserServiceEndPoint: http://userservice:8080/users/GetByUsername/
    networks:
      - app-network
    depends_on:
      - userservice

  biddingservice:
    build:
      context: C:/Users/soren/Desktop/Auktionshus/BiddingService/BiddingServiceAPI # Path to RabbitMQSender app
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
     - "5180:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      RabbitMQ__HostName: rabbitmq
    networks:
      - app-network

  biddingservice1:
    build:
      context: /home/Jesoren/poc/BiddingService/BiddingServiceAPI
      dockerfile: Dockerfile
    depends_on:
      - rabbitmq
    ports:
     - "5181:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      RabbitMQ__HostName: rabbitmq
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP port for communication
      - "15672:15672" # RabbitMQ Management UI
      - "5552:5552" # Tilf√∏j denne linje
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_HOSTNAME: rabbitmq 
      RABBITMQ_PORT: 5552
    networks:
      - app-network
    command: ["sh", "-c", "rabbitmq-plugins enable rabbitmq_stream rabbitmq_stream_management && rabbitmq-server"]

  vault_dev:
    image: hashicorp/vault:latest
    container_name: vault_dev
    restart: on-failure:10
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8201'
      VAULT_LOCAL_CONFIG:
        '{"listener": [{"tcp":{"address": "0.0.0.0:8201",
        "tls_disable": "1", "tls_cert_file":"/data/cert.pem",
        "tls_key_file":"/data/key.pem"}}],
        "default_lease_ttl": "168h", "max_lease_ttl": "720h"},
        "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault-volume:/data
    healthcheck:
      retries: 5
    command: 'server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"'
    networks:
      - app-network

  vault-init:
    image: hashicorp/vault:latest
    command: sh "/app/vault_init.sh"
    depends_on:
      - vault_dev
    healthcheck:
      retries: 5
    volumes:
      - ./vault-init/vault_init.sh:/app/vault_init.sh
    networks:
      - app-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "4000:4000"
    depends_on:
      - catalogservice
      - catalogservice1
      - catalogservice2
      - userservice
      - userservice1
      - authservice
      - authservice1
      - biddingservice
      - biddingservice1
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
